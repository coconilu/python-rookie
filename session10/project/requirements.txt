# Session10 项目依赖文件
# Python模块管理系统所需的第三方包

# ============================================================================
# 核心依赖
# ============================================================================

# 数据处理
pandas>=1.3.0              # 数据分析和处理
numpy>=1.21.0               # 数值计算

# 模板引擎
jinja2>=3.0.0               # HTML/Markdown模板渲染

# 文件处理
chardet>=4.0.0              # 字符编码检测
pathlib2>=2.3.0             # 路径处理增强 (Python < 3.4)

# JSON处理
orjson>=3.6.0               # 快速JSON处理 (可选)

# ============================================================================
# 可视化依赖 (可选)
# ============================================================================

# 图表生成
matplotlib>=3.4.0           # 基础图表
seaborn>=0.11.0             # 统计图表
plotly>=5.0.0               # 交互式图表

# ============================================================================
# 开发和测试依赖
# ============================================================================

# 测试框架
pytest>=6.0.0               # 单元测试框架
pytest-cov>=2.12.0          # 测试覆盖率
pytest-mock>=3.6.0          # 测试模拟

# 代码质量
black>=21.0.0               # 代码格式化
flake8>=3.9.0               # 代码检查
mypy>=0.910                 # 类型检查
isort>=5.9.0                # 导入排序

# 文档生成
sphinx>=4.0.0               # 文档生成
sphinx-rtd-theme>=0.5.0     # 文档主题

# ============================================================================
# 性能和监控依赖 (可选)
# ============================================================================

# 性能分析
memory-profiler>=0.58.0     # 内存分析
line-profiler>=3.3.0        # 行级性能分析

# 进度条
tqdm>=4.60.0                # 进度条显示

# ============================================================================
# 系统和平台依赖
# ============================================================================

# Windows特定
colorama>=0.4.4             # Windows终端颜色支持

# 跨平台文件监控
watchdog>=2.1.0             # 文件系统监控

# ============================================================================
# 可选的高级功能依赖
# ============================================================================

# 并发处理
concurrent-futures>=3.1.1   # 并发执行 (Python < 3.2)
multiprocess>=0.70.0        # 多进程增强

# 缓存
cachetools>=4.2.0           # 缓存工具

# 配置管理
pyyaml>=5.4.0               # YAML配置文件支持
toml>=0.10.0                # TOML配置文件支持

# 日志增强
coloredlogs>=15.0           # 彩色日志
loguru>=0.5.0               # 现代日志库 (可选替代)

# ============================================================================
# 数据库支持 (可选)
# ============================================================================

# SQLite增强
sqlalchemy>=1.4.0           # ORM框架

# ============================================================================
# Web相关 (如果需要Web界面)
# ============================================================================

# Web框架
flask>=2.0.0                # 轻量级Web框架
fastapi>=0.68.0             # 现代API框架
uvicorn>=0.15.0             # ASGI服务器

# ============================================================================
# 安装说明
# ============================================================================

# 基础安装 (仅核心功能):
# pip install pandas numpy jinja2 chardet

# 完整安装 (所有功能):
# pip install -r requirements.txt

# 开发环境安装:
# pip install -r requirements.txt
# pip install -e .

# 生产环境安装 (排除开发依赖):
# pip install pandas numpy jinja2 chardet matplotlib seaborn tqdm colorama

# ============================================================================
# 版本兼容性说明
# ============================================================================

# Python版本要求: >= 3.7
# 推荐Python版本: >= 3.8

# 主要依赖的最低版本要求:
# - pandas: 1.3.0+ (支持现代API)
# - numpy: 1.21.0+ (支持类型提示)
# - jinja2: 3.0.0+ (支持async)
# - matplotlib: 3.4.0+ (改进的API)

# ============================================================================
# 可选依赖说明
# ============================================================================

# 如果不需要图表功能，可以不安装:
# matplotlib, seaborn, plotly

# 如果不需要开发工具，可以不安装:
# pytest, black, flake8, mypy, sphinx

# 如果不需要性能分析，可以不安装:
# memory-profiler, line-profiler

# 如果不需要Web功能，可以不安装:
# flask, fastapi, uvicorn

# ============================================================================
# 安装故障排除
# ============================================================================

# 如果安装失败，尝试:
# 1. 升级pip: python -m pip install --upgrade pip
# 2. 使用国内镜像: pip install -i https://pypi.tuna.tsinghua.edu.cn/simple/
# 3. 分别安装有问题的包
# 4. 检查Python版本兼容性

# Windows用户可能需要安装Visual C++构建工具
# macOS用户可能需要安装Xcode命令行工具
# Linux用户可能需要安装python3-dev包