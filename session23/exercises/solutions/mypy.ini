# Session23 配置文件示例：mypy.ini
# MyPy 静态类型检查器配置文件
# 这个文件展示了如何配置MyPy进行严格的类型检查

[mypy]
# Python版本
python_version = 3.8

# 基本检查选项
warn_return_any = True
warn_unused_configs = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True

# 严格模式选项
strict_optional = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True
no_implicit_optional = True

# 输出格式
show_error_codes = True
show_column_numbers = True
color_output = True
pretty = True
error_summary = True

# 缓存设置
cache_dir = .mypy_cache
sqlite_cache = True

# 导入发现
namespace_packages = True
explicit_package_bases = True

# 错误处理
ignore_errors = False
ignore_missing_imports = False
follow_imports = normal

# 平台和版本
platform = win32

# 插件
plugins = 

# 排除的文件和目录
exclude = (?x)(
    ^build/
    | ^dist/
    | ^venv/
    | ^\.venv/
    | ^__pycache__/
    | ^\.mypy_cache/
    | ^\.pytest_cache/
    | ^node_modules/
    | \.pyc$
    | \.pyo$
)

# 第三方库配置
# 对于没有类型注解的第三方库，忽略导入错误

[mypy-requests.*]
ignore_missing_imports = True

[mypy-pandas.*]
ignore_missing_imports = True

[mypy-numpy.*]
ignore_missing_imports = True

[mypy-matplotlib.*]
ignore_missing_imports = True

[mypy-seaborn.*]
ignore_missing_imports = True

[mypy-sklearn.*]
ignore_missing_imports = True

[mypy-scipy.*]
ignore_missing_imports = True

[mypy-PIL.*]
ignore_missing_imports = True

[mypy-cv2.*]
ignore_missing_imports = True

[mypy-tensorflow.*]
ignore_missing_imports = True

[mypy-torch.*]
ignore_missing_imports = True

[mypy-flask.*]
ignore_missing_imports = True

[mypy-django.*]
ignore_missing_imports = True

[mypy-fastapi.*]
ignore_missing_imports = True

[mypy-sqlalchemy.*]
ignore_missing_imports = True

[mypy-pytest.*]
ignore_missing_imports = True

[mypy-click.*]
ignore_missing_imports = True

[mypy-rich.*]
ignore_missing_imports = True

[mypy-typer.*]
ignore_missing_imports = True

# 测试文件的宽松配置
# 测试文件通常不需要严格的类型检查
[mypy-tests.*]
disallow_untyped_defs = False
disallow_incomplete_defs = False
check_untyped_defs = False
warn_return_any = False

# 示例文件的宽松配置
[mypy-examples.*]
disallow_untyped_defs = False
warn_return_any = False

# 练习文件的宽松配置
[mypy-exercises.*]
disallow_untyped_defs = False
warn_return_any = False

# 特定模块的自定义配置示例
# 如果某个模块需要特殊的类型检查配置

# 示例：对于遗留代码的宽松配置
[mypy-legacy.*]
ignore_errors = True

# 示例：对于实验性代码的配置
[mypy-experimental.*]
warn_unused_ignores = False
warn_return_any = False

# 示例：对于性能关键代码的严格配置
[mypy-performance.*]
strict = True
warn_return_any = True
disallow_any_generics = True
disallow_any_unimported = True
disallow_any_expr = False  # 这个通常太严格
disallow_any_decorated = True
disallow_any_explicit = False  # 这个通常太严格
disallow_subclassing_any = True

# 配置说明：
# 
# 1. 基本选项：
#    - python_version: 指定目标Python版本
#    - warn_*: 各种警告选项
#    - disallow_*: 禁止某些类型的代码
# 
# 2. 严格模式：
#    - strict = True 会启用所有严格检查
#    - 也可以单独配置每个选项
# 
# 3. 第三方库：
#    - ignore_missing_imports = True 忽略没有类型注解的库
#    - 可以为每个库单独配置
# 
# 4. 文件特定配置：
#    - 使用 [mypy-模块名] 为特定模块配置
#    - 支持通配符匹配
# 
# 5. 常用命令：
#    - mypy .                    # 检查当前目录
#    - mypy file.py             # 检查特定文件
#    - mypy --strict .          # 使用严格模式
#    - mypy --config-file mypy.ini .  # 指定配置文件