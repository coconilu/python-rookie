#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Session01 练习题5：格式化输出挑战

题目描述：
这是一个挑战性练习，要求创建一个程序来生成美观的成绩单，包含：
1. 获取学生姓名和三门课程的成绩
2. 计算总分、平均分、等级
3. 使用多种格式化方法展示结果
4. 创建ASCII艺术风格的成绩单
5. 添加颜色代码（可选）

等级标准：
- A: 90-100分
- B: 80-89分  
- C: 70-79分
- D: 60-69分
- F: 0-59分

输入示例：
请输入学生姓名: 张三
请输入数学成绩: 95
请输入英语成绩: 87
请输入物理成绩: 92

输出示例：
┌─────────────────────────────────────────┐
│                成绩单                   │
├─────────────────────────────────────────┤
│ 学生姓名: 张三                          │
│ 学号: 2024001                           │
│ 班级: Python班                          │
├─────────────────────────────────────────┤
│ 科目        │ 成绩    │ 等级    │ 状态  │
├─────────────────────────────────────────┤
│ 数学        │  95.0   │   A     │ 优秀  │
│ 英语        │  87.0   │   B     │ 良好  │
│ 物理        │  92.0   │   A     │ 优秀  │
├─────────────────────────────────────────┤
│ 总分: 274.0  平均分: 91.3  综合等级: A   │
└─────────────────────────────────────────┘

★ 恭喜！你的成绩非常优秀！ ★

提示：
- 使用字典存储科目和成绩
- 创建函数计算等级
- 使用字符串对齐方法
- 尝试使用不同的Unicode字符
- 可以添加ANSI颜色代码（高级）
"""

# 在这里编写你的代码

def get_grade(score):
    """
    根据分数计算等级
    
    Args:
        score: 分数
    
    Returns:
        等级字符串
    """
    # TODO: 实现等级计算逻辑
    pass


def get_status(grade):
    """
    根据等级获取状态描述
    
    Args:
        grade: 等级
    
    Returns:
        状态描述
    """
    # TODO: 实现状态描述逻辑
    pass


def solution():
    """
    在这里实现你的解决方案
    """
    # TODO: 在这里编写你的代码
    # 提示：
    # 1. 获取学生信息和成绩
    # 2. 计算总分和平均分
    # 3. 为每门课程计算等级
    # 4. 创建美观的表格输出
    # 5. 添加祝贺信息
    
    # 可以使用的Unicode字符：
    # ┌ ┐ └ ┘ ├ ┤ ┬ ┴ ┼ │ ─
    # ╔ ╗ ╚ ╝ ╠ ╣ ╦ ╩ ╬ ║ ═
    
    pass  # 删除这行，开始编写你的代码


if __name__ == "__main__":
    solution()