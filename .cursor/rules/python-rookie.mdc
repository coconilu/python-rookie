---
description: 
globs: 
alwaysApply: false
---
# Python 新手到项目负责人教程 - Cursor Rules

## 项目概述

这是一个专为 Python 初学者设计的完整教学项目，采用理论与实践相结合的方式。项目包含 30 个课程，分为 6 个阶段，从基础语法到项目实战，帮助学员成长为能够独立负责项目的 Python 开发者。

## 项目结构

项目按照课程编号组织在 `session01` 到 `session30` 目录中，每个课程目录包含：
- `README.md` - 课程概述
- `tutorial.md` - 详细教程
- `demo.py` - 演示代码
- `examples/` - 示例代码
- `exercises/` - 练习题
- `solutions/` - 练习题答案
- `project/` - 本课程的演示项目

主要参考文件：
- [README.md](mdc:README.md) - 项目整体介绍和学习路径
- [pyproject.toml](mdc:pyproject.toml) - 项目依赖配置

## 开发规范

### 代码风格
- 遵循 PEP 8 编码规范
- 使用清晰的变量名和函数名
- 添加适当的注释，特别是对初学者可能困惑的地方
- 每个示例代码都应该是可独立运行的

### 文档规范
- 每个课程都需要有清晰的 README.md 说明学习目标
- tutorial.md 应该详细解释概念，并配有代码示例
- 练习题应该循序渐进，从简单到复杂

### 示例代码要求
- 必须能够直接运行，不依赖外部资源
- 包含充分的注释说明
- 展示最佳实践
- 避免使用过于高级的特性（除非是该课程的教学内容）

## 课程阶段说明

### 第一阶段：Python基础入门（session01-06）
重点是基础语法和编程思维的培养，示例应该简单直观。

### 第二阶段：进阶编程技能（session07-11）
引入面向对象编程和错误处理，示例需要展示良好的代码组织。

### 第三阶段：实用库与工具（session12-16）
介绍常用库的使用，示例应该贴近实际应用场景。

### 第四阶段：Web开发基础（session17-20）
Flask 框架和 Web 开发基础，示例需要包含前后端交互。

### 第五阶段：项目实战与工程化（session21-25）
软件工程最佳实践，示例应该展示专业的开发流程。

### 第六阶段：综合项目实战（session26-30）
完整项目开发，需要综合运用前面所学知识。

## 依赖管理

项目使用 `uv` 作为依赖管理工具：
- 所有依赖都在 [pyproject.toml](mdc:pyproject.toml) 中定义
- 使用 `uv sync` 安装依赖
- 使用 `uv run` 运行 Python 脚本

## 教学建议

1. **循序渐进**：每个概念都要有充分的解释和示例
2. **实践为主**：每个知识点都配有可运行的代码
3. **项目驱动**：通过实际项目巩固所学知识
4. **注重基础**：前期课程特别要注意打好基础

## 常见问题处理

- 如果学员遇到环境配置问题，优先推荐使用 uv 管理
- 代码示例应该兼容 Windows、macOS 和 Linux
- 避免使用系统特定的路径，使用 `pathlib` 处理路径

## 贡献指南

添加新内容时：
1. 确保符合整体教学进度
2. 提供完整的示例代码和练习题
3. 更新相应的 README 文件
4. 测试所有代码在 Python 3.11+ 下可正常运行
